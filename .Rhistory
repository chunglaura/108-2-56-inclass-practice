today <- list(
list("台北市",c(highest_temp = 25),c(lowest_temp = 18)),
list("新北市",c(highest_temp = 24),c(lowest_temp = 15)))
tomorrow <- list(
list("台北市",c(highest_temp = 25),c(lowest_temp = 18)),
list("新北市",c(highest_temp = 24),c(lowest_temp = 15)))
weather <- list(today,tomorrow)
print(weather)
tomorrow <- list(
list("台北市",c(highest_temp = 25),c(lowest_temp = 18)),
list("新北市",c(highest_temp = 24),c(lowest_temp = 15)))
weather <- list(today,tomorrow)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite)
pi <- c(3,1,4,1,5,9,2,6,5,3,5)
pi <- c(3,1,4,1,5,9,2,6,5,3,5)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite)
gift<-pi[[8]]
# gift
gift<-pi[[8]]
# gift
gift<-pi[[8]]
gift
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
time_place<-course[[2]][[4]]
# time_place
time_place<-course[[2]][[4]]
# time_place
View(course)
time_place <- course[[2]][[4]]
# time_place
time_place <- course[[2]][[4]]
# time_place
time_place <- course[[2]][[4]]
time_place
# course_update
View(params)
course[[2]][[4]]<-"選"
# course_update
course[[2]][[4]]<-"選"
# course_update
course[[2]][[4]]<-"選"
# course_update
course[[2]][[2]]<-"選"
# course_update
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
course[[2]][[2]]<-"選"
# course_update
course_update<-list(approve=T,course=list(coursename="會計學",type="選",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9)
,classroom="商2F05")))
course_update$course[[2]]<-"選"
# course_update
View(course_update)
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
course_update<-list(approve=T,course=list(coursename="會計學",type="選",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9)
,classroom="商2F05")))
course_update$course[[2]]<-"選"
# course_update
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
course_update<-list(approve=T,course=list(coursename="會計學",type="選",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9),classroom=""商205")))
course_update<-list(approve=T,course=list(coursename="會計學",type="選",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9),classroom=""商205")))
course_update<-list(approve=T,course=list(coursename="會計學",type="選",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9),classroom=""商205")))
course_update<-list(approve=T,course=list(coursename="會計學",type="選",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9),classroom=""商205")))
course_update<-list(approve=T,course=list(coursename="會計學",type="選",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9),classroom=""商205")))
course_update<-list(approve=T,course=list(coursename="會計學",type="選",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9),classroom=""商205")))
course_update<-list(approve=T,course=list(coursename="會計學",type="選",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9),classroom=""商205")))
course_update<-list(approve=T,course=list(coursename="會計學",type="選",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9),classroom=""商205")))
course_update<-list(approve=T,course=list(coursename="會計學",type="選",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9),classroom=""商205")))
course_update<-list(approve=T,course=list(coursename="會計學",type="選",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9),classroom=""商205")))
course_update<-list(approve=T,course=list(coursename="會計學",type="選",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9),classroom=""商205")))
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
course_update<-list(approve=T,course=list(coursename="會計學",type="選",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9),classroom=""商205")))
course_update<-list(approve=T,course=list(coursename="會計學",type="選",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9),classroom=""商205")))
course_update<-list(approve=T,course=list(coursename="會計學",type="選",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9)
,classroom="商2F05")))
course_update$course[[2]]<-"選"
# course_update
course_update<-list(approve=T,course=list(coursename="會計學",type="選",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9),classroom=""商205")))
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
time_place <- course[[2]][[4]]
time_place
course_update<-list(approve=T,course=list(coursename="會計學",type="選",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9),classroom=""商205")))
course_update<-list(approve=T,course=list(coursename="會計學",type="選",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9),classroom=""商205")))
course_update<-list(approve=T,course=list(coursename="會計學",type="選",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9)
,classroom="商205")))
course_update$course[[2]]<-"選"
course_update
course_update<-list(approve=T,course=list(coursename="會計學",type="選",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9)
,classroom="商205")))
course_update$course[[2]]<-"選"
course_update
View(course_update)
course_update$course[["teacher"]]<-list("紀學檜")
course_update2<-course_update
# course_update2
course[[2]][[2]]<-"選"
course[1]<-list(approve=T)
course_update<-course
course_update
course[[2]][[2]]<-"選"
course[1]<-list(approve=T)
course_update<-course
course_update
course[[2]][[2]]<-"選"
course[1]<-list(approve=T)
course_update<-course
course_update
course[[2]][[2]]<-"選"
course[1]<-list(approve=T)
course_update<-course
course_update
course[[2]][[2]] <- "選"
course[1]<-list(approve=T)
course_update<-course
course_update
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite)
course[[2]][[2]] <- "選"
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite)
course[[2]][[2]] <- "選"
course[1]<-list(approve=T)
course_update<-course
course_update
course[[2]][[2]] <- "選"
course[1]<-list(approve=T)
course_update<-course
course_update
course[[2]][[2]] <- "選"
course[1]<-list(approve=T)
course_update<-course
course_update
course[[2]][[2]] <- "選"
#course[1]<-list(approve=T)
course_update<-course
course_update
course[[2]][[2]] <- "選"
#course[1]<-list(approve=T)
#course_update<-course
#course_update
course[[2]][[2]] <- "選"
#course[1]<-list(approve=T)
#course_update<-course
#course_update
course[[2]][[2]] <- "選"
#course[1]<-list(approve=T)
#course_update<-course
#course_update
course[[2]][[2]] <- "選"
course[1]<-list(approve=T)
course_update<-course
course_update
course_update$course[["teacher"]]<-list("紀學檜")
course_update2<-course_update
# course_update2
course_update$course[["teacher"]]<-"紀學檜"
course_update2<-course_update
course_update2
fromJSON("https://www.dropbox.com/s/3of3hxzt86oyci8/Gamemaster.json?dl=1", simplifyDataFrame = F) -> Gamemaster
fromJSON("https://www.dropbox.com/s/3of3hxzt86oyci8/Gamemaster.json?dl=1", simplifyDataFrame = F) -> Gamemaster
fromJSON("https://www.dropbox.com/s/3of3hxzt86oyci8/Gamemaster.json?dl=1", simplifyDataFrame = F) -> Gamemaster
course_update$course[["teacher"]]<-"紀學檜"
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
course_update$course[["teacher"]]<-"紀學檜"
course[[2]][[2]] <- "選"
course[1]<-list(approve=T)
course_update<-course
course_update
course_update$course[["teacher"]]<-"紀學檜"
course_update2<-course_update
course_update2
Gamemaster[[27]]<-"Pikachu"
# Pikachu
Pikachu<-Gamemaster[[1]][[27]]
str(Pikachu)
# Pikachu
Pikachu<-Gamemaster[[1]][[27]]
str(Pikachu)
Pikachu
Pikachu_stats<-Pikachu$baseStats
Pikachu_stats[c(1,2,3)]<-as.numeric(Pikachu_stats [c(1,2,3)])
str(Pikachu_stats)
# Pikachu_stats
Pikachu_stats<-Pikachu$baseStats
#Pikachu_stats[c(1,2,3)]<-as.numeric(Pikachu_stats [c(1,2,3)])
str(Pikachu_stats)
# Pikachu_stats
Pikachu_stats<-Pikachu$baseStats
Pikachu_stats[c(1,2,3)]<-as.numeric(Pikachu_stats [c(1,2,3)])
str(Pikachu_stats)
# Pikachu_stats
Pikachu_stats<-Pikachu$baseStats
Pikachu_stats[c(1,2,3)]<-as.numeric(Pikachu_stats [c(1,2,3)])
str(Pikachu_stats)
# Pikachu_stats
Jigglypuff<-Gamemaster[[1]][[46]]<-"Jigglypuff"
# Jigglypuff
Jigglypuff<-Gamemaster[[1]][[46]]<-"Jigglypuff"
Jigglypuff
Jigglypuff<-Gamemaster[[1]][[46]]
#<-"Jigglypuff"
Jigglypuff
Jigglypuff<-Gamemaster[[1]][[46]]
#<-"Jigglypuff"
Jigglypuff
fromJSON("https://www.dropbox.com/s/3of3hxzt86oyci8/Gamemaster.json?dl=1", simplifyDataFrame = F) -> Gamemaster
Jigglypuff<-Gamemaster[[1]][[46]]
#<-"Jigglypuff"
Jigglypuff
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
Jigglypuff<-Gamemaster[[1]][[46]]
Jigglypuff$speciesName<-"Jigglypuff"
Jigglypuff
Gamemaster[[1]][[46]][[2]]<-"Jigglypuff"
Jigglypuff<-Gamemaster[[1]][[46]]
# Jigglypuff
Gamemaster[[1]][[46]][[2]]<-"Jigglypuff"
Jigglypuff<-Gamemaster[[1]][[46]]
# Jigglypuff
Gamemaster[[1]][[46]][[2]]<-"Jigglypuff"
Jigglypuff<-Gamemaster[[1]][[46]]
Jigglypuff
View(Gamemaster)
Gamemaster$pokemon[[731]]<-Mimikyu
Gamemaster$pokemon[[731]]<-"Mimikyu"
# Gamemaster
Gamemaster[[1]][[731]]<-list(dex=as.integer(778),speciesName="Mimikyu",speciesId="mimikyu",baseStats=Pikachu[[4]],type=c("ghost","fairy"),fastMoves=Jigglypuff[[6]],chargedMoves=igglypuff[[7]],legacyMoves=[[8]],defaultIVs[[9]])
Gamemaster[[1]][[731]]<-list(dex=as.integer(778),speciesName="Mimikyu",speciesId="mimikyu",baseStats=Pikachu[[4]],type=c("ghost","fairy"),fastMoves=Jigglypuff[[6]],chargedMoves=Jigglypuff[[7]],legacyMoves=Jigglypuff[[8]],defaultIVs=Jigglypuff[[9]])
fromJSON("https://www.dropbox.com/s/3of3hxzt86oyci8/Gamemaster.json?dl=1", simplifyDataFrame = F) -> Gamemaster
Gamemaster[[1]][[731]]<-list(dex=as.integer(778),speciesName="Mimikyu",speciesId="mimikyu",baseStats=Pikachu[[4]],type=c("ghost","fairy"),fastMoves=Jigglypuff[[6]],chargedMoves=Jigglypuff[[7]],legacyMoves=Jigglypuff[[8]],defaultIVs=Jigglypuff[[9]])
Gamemaster[[1]][[731]]<-list(dex=as.integer(778),speciesName="Mimikyu",speciesId="mimikyu",baseStats=Pikachu[[4]],type=c("ghost","fairy"),fastMoves=Jigglypuff[[6]],chargedMoves=Jigglypuff[[7]],legacyMoves=Jigglypuff[[8]],defaultIVs=Jigglypuff[[9]])
fromJSON("https://www.dropbox.com/s/3of3hxzt86oyci8/Gamemaster.json?dl=1", simplifyDataFrame = F) -> Gamemaster
Pikachu<-Gamemaster[[1]][[27]]
str(Pikachu)
Pikachu
Gamemaster[[1]][[731]]<-list(dex=as.integer(778),speciesName="Mimikyu",speciesId="mimikyu",baseStats=Pikachu[[4]],type=c("ghost","fairy"),fastMoves=Jigglypuff[[6]],chargedMoves=Jigglypuff[[7]],legacyMoves=Jigglypuff[[8]],defaultIVs=Jigglypuff[[9]])
#Gamemaster
Gamemaster[[1]][[731]]<-list(dex=as.integer(778),speciesName="Mimikyu",speciesId="mimikyu",baseStats=Pikachu[[4]],type=c("ghost","fairy"),fastMoves=Jigglypuff[[6]],chargedMoves=Jigglypuff[[7]],legacyMoves=Jigglypuff[[8]],defaultIVs=Jigglypuff[[9]])
#Gamemaster
View(Gamemaster)
course[[2]][[2]] <- "選"
course[1]<-list(approve=T)
course_update<-course
course_update
course[[2]][[2]] <- "選"
course[1]<-list(approve=T)
course_update<-course
course_update
course_update<-list(approve=T,course=list(coursename="會計學",type="選",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9)
,classroom="商2F05")))
course_update$course[[2]]<-"選"
# course_update
course[[2]][[2]] <- "選"
course[1]<-list(approve=T)
course_update<-course
course_update
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
a <- c(2, 3, 5)
b <- c(4,-1, 3)
a+b
a-b
a*b
a/b
sequenceNums <- c(11, 6, 8, 11, 12, 11, 3, 7, 10, 8)
print(sequenceNums)
sequenceNums %% 2 # 餘數為1則是奇數，0則是偶數
c(2%%4,3%%(-1),5%%3)
c(2**4,3**(-1),5**3)
sequenceNums <- c(11, 6, 8, 11, 12, 11, 3, 7, 10, 8)
print(sequenceNums)
sequenceNums %% 2 # 餘數為1則是奇數，0則是偶數
c(5,5,5)*c(1,3,4)+c(7,7,7)
c(2,3,2,3)/c(-2,-13,10,22)
c(2,3,2)/c(-2,-13,10)
paste0(
c("我叫","我叫"), c("小明","小美")
)
paste0(
c("我叫"), c("小明","小美")
)
paste0(
c("他叫","我叫"), c("小明","小美","大雄")
)
example <- list(
name=c("小明","小花","小新","美美"),
height=c(175,166,170,160),
weight=c(77,NA,60,43),
birthday=lubridate::ymd(c("1998-03-11","1999-12-22","1995-08-22","2001-10-10")),
hobby=c("美食 旅遊","旅遊 時尚","3C 美食","音樂 旅遊"),
residence=c("Taipei","New Taipei","Taichung","Kaohsiung"),
allowance=factor(c("0-1000","1001-2000","2000+","1001-2000")),
bloodType=c("A","B","B","O")
)
str(example[c("name","height")])
pick_above170 <- example$height >= 170
example$height
c(175, 166, 170, 160) >= 170
example$name[pick_above170]
source("https://www.dropbox.com/s/qsrw069n94k61lj/transcript100to103_list.R?dl=1")
str(transcript100to103)
# 各學屆2年級人數
table(transcript100to103$學屆)
# 各學屆2年級成績大於85年數
table(transcript100to103$學屆[pick_above85])
# 只要成績大於85的
pick_above85 <-
transcript100to103$`成績` > 85
# 只要成績大於85的
pick_above85 <-
transcript100to103$`成績` > 85
example$birthday
class(example$birthday)
typeof(example$birthday)
print(example[c("name","birthday")])
pick_after98 <- example$birthday >= lubridate::ymd("1998-01-01")
example$name[pick_after98]
source("https://www.dropbox.com/s/16h6ggua6qtydci/exchangeRate.R?dl=1")
str(exchangeRate)
exchangeRate_after98 <-
list(
`期間`=exchangeRate$`期間`[pick_after98_01],
`幣別`=exchangeRate$`幣別`[pick_after98_01],
`匯率`=exchangeRate$`匯率`[pick_after98_01]
)
# 只要1998年1月（含）以後的
library(lubridate)
pick_after98_01 <-
exchangeRate$期間 >= ymd("1998-01-01")
exchangeRate_after98 <-
list(
`期間`=exchangeRate$`期間`[pick_after98_01],
`幣別`=exchangeRate$`幣別`[pick_after98_01],
`匯率`=exchangeRate$`匯率`[pick_after98_01]
)
print(example[c("name","allowance")])
pick_allowanceOver1000 <- example$allowance >= "1001-2000"
example$name[pick_allowanceOver1000]
levels(example$allowance)
example$allowance <-
ordered(example$allowance)
example$allowance <-
factor(
c("0-1000", "1001-2000", "2000+","1001-2000"),
example$allowance,
levels=c("0-1000", "1001-2000", "2000+"),
ordered = T # 設定為可排序factor
)
example$allowance <-
factor(
example$allowance,
levels=c("0-1000", "1001-2000", "2000+"),
ordered = T # 設定為可排序factor
)
jsonlite::fromJSON("https://www.dropbox.com/s/3uijub7xheib405/list_victimAges_female.json?dl=1", simplifyDataFrame = F) -> list_victimAges_female
x <- c(1,5,8)
y <- c(5,8)
# x裡的元素值是不是屬於y集合
x %in% y
sequenceNums <- c(11, 6, 8, 11, 12, 11, 3, 7, 10, 8)
pick_evens <- (sequenceNums %% 2) == 0
sequenceNums[pick_evens]
print(example[c("name","bloodType")])
pick_bloodB <- example$bloodType == "B"
example$name[pick_bloodB]
str(list_victimAges_female)
View(list_victimAges_female$`數目`)
sum(list_victimAges_female$`數目`)
sum(list_victimAges_female$`數目`, na.rm=T)
print(example[c("name","residence")])
set_TaipeiMetro <- c("Taipei","New Taipei")
pick_fromTaipeiMetro <- example$residence %in% set_TaipeiMetro
example$name[pick_fromTaipeiMetro]
str(transcript100to103)
set_LawBusiness <- c(
"法學院","商學院"
)
pick_LawBusiness <-
transcript100to103$學院 %in%
set_LawBusiness
print(example[c("name","residence")])
example$name[pick_fromTaipeiMetro]
example$name[pick_not_fromTaipeiMetro]
x2 <- c(1,NA,10)
y2 <- c(-1,NA,20)
x3 <- c(NA,"小花")
y3 <- c(NA,"小華")
x2
is.na(x2)
print(example[c("name","weight")])
pick_na <- is.na(example$weight)
example$name[pick_na]
0/0
list_victimAges_female$數目 <- as.integer(list_victimAges_female$數目)
pick_na <- is.na(list_victimAges_female$數目)
total_na <- sum(pick_na)
print(total_na)
pick_na <- is.na(list_victimAges_female$數目)
total_na <- sum(pick_na)
print(total_na)
print(example[c("name","hobby")])
pick_loveFood <- stringr::str_detect(example$hobby,"美食")
example$name[pick_loveFood]
example[["hobby2"]] <- c("美食", "時尚", "美食", "旅遊")
print(example[c("name", "hobby2")])
pick_loveFood2 <- example$hobby2 == "美食"
example$name[pick_loveFood2]
jsonlite::fromJSON("https://data.ntpc.gov.tw/od/data/api/EDC3AD26-8AE7-4916-A00B-BC6048D19BF8?$format=json") ->
garbageRoutes
#  1 用typeof()函數查詢電腦實質上如何看待garbageRoutes。
typeof(garbageRoutes)
#  2 用class()函數查詢電腦把它能進行的操作運算歸屬於哪一類型。
class(garbageRoutes)
# 由linename元素判斷垃圾車有幾條路線。
factor(garbageRoutes$linename) -> garbageRoutes$linename
levels(garbageRoutes$linename)
# 由linename元素判斷垃圾車有幾條路線。
factor(garbageRoutes$linename) -> garbageRoutes$linename
levels(garbageRoutes$linename)
# 由linename創造： 可篩選出下午路線的「要/不要」向量pick_afternoonRoutes。
pick_afternoonRoutes <-
stringr::str_detect(
garbageRoutes$linename,
"下午"
)
garbageRoutes$linename[pick_afternoonRoutes]
fruit <- c("apple", "banana", "pear", "pinapple")
str_detect(fruit, "a")
pick_pneumonia <- stringr::str_detect(CDC_chatbox$Question,"肺炎")
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
violatedArticles<-levels(factor(badEmployers$law))
# violatedArticles
table_countsByArticle<-table(badEmployers$law)
table_countsByArticle
names(table_countsByArticle)
# table_countsByArticle
pick<-table_countsByArticle==max(table_countsByArticle)
mostViolatedArticle<-(table_countsByArticle[pick])
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
pick2<-table(badEmployers$lawContent)==max(max(table(badEmployers$lawContent)))
mostViolatedArticle_content<-names((table(badEmployers$lawContent)[pick2]))
# mostViolatedArticle_content
m1 <-(stringr::str_detect(badEmployers$dt,"/01/"))
M1<-sum(m1==T)
m2 <-(stringr::str_detect(badEmployers$dt,"/02/"))
M2<-sum(m2==T)
m3 <-(stringr::str_detect(badEmployers$dt,"/03/"))
M3<-sum(m3==T)
m4 <-(stringr::str_detect(badEmployers$dt,"/04/"))
M4<-sum(m4==T)
m5 <-(stringr::str_detect(badEmployers$dt,"/05/"))
M5<-sum(m5==T)
m6 <-(stringr::str_detect(badEmployers$dt,"/06/"))
M6<-sum(m6==T)
m7 <-(stringr::str_detect(badEmployers$dt,"/07/"))
M7<-sum(m7==T)
m8 <-(stringr::str_detect(badEmployers$dt,"/08/"))
M8<-sum(m8==T)
m9 <-(stringr::str_detect(badEmployers$dt,"/09/"))
M9<-sum(m9==T)
m10 <-(stringr::str_detect(badEmployers$dt,"/10/"))
M10<-sum(m10==T)
m11 <-(stringr::str_detect(badEmployers$dt,"/11/"))
M11<-sum(m11==T)
m12 <-(stringr::str_detect(badEmployers$dt,"/12/"))
M12<-sum(m12==T)
Y<-c(M1,M2,M3,M4,M5,M6,M7,M8,M9,M10,M11,M12)
Y
max(Y)
popularSentenceMonth<-"November"
popularSentenceMonth
# popularSentenceMonth
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
chinese <-table$'國文' <-
ordered(table$'級分'+1)
# chinese
chinese <-table$'國文' <-
ordered(table$'級分'+1)
# chinese
chinese <-table$'國文' <-
ordered(table$'級分'+1)
# chinese
ntpu_namelist<-students10$'姓名'[str_detect(students10$'志願',"北大")]
# ntpu_namelist
ntpu_namelist<-students10$'姓名'[str_detect(students10$'志願',"北大")]
# ntpu_namelist
ntpu_namelist<-students10$'姓名'[str_detect(students10$'志願',"北大")]
# ntpu_namelist
First<-str_detect(students10$'志願',"北大")
Second<-students10$'國文'>=12
Third<-(students10$'數學'+students10$'英文')>=26
Fourth<-First+Second+Third
ntpu_econtpu_eco<-students10$'姓名'[Fourth==3]
# ntpu_econtpu_eco
IN<-namelist%in%ntpu_namelist
congrats<-paste0("恭喜"," ",namelist[IN]," " ,"同學錄取國立臺北大學經濟系")
congrats
# congrats
